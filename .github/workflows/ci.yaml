name: CI

on: [push]

env:
  RUST_PROFILE: minimal
  RUST_VERSION: stable
  VCPKG_DEFAULT_BINARY_CACHE: /home/runner/vcpkg-binary-cache
  XDG_CACHE_HOME: /home/runner/.xdg

jobs:
  build:
    name: Build (${{ matrix.triplet }})
    strategy:
      matrix:
        include: 
          - os: ubuntu-latest
            triplet: x86_64-unknown-linux-gnu
            artifact: chip-8-emu
          # - os: windows-latest
          #   triplet: x86_64-pc-windows-msvc
          #   artifact: chip-8-emu.exe
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Get vcpkg rev version
        uses: SebRollen/toml-action@v1.0.1
        id: vcpkg_version
        with:
          file: Cargo.toml
          field: package.metadata.vcpkg.rev
      - name: Prepare vcpkg directories
        run: |
          mkdir -p $VCPKG_DEFAULT_BINARY_CACHE
          mkdir -p $XDG_CACHE_HOME
          ls -la /home/runner
      - name: Cache Cargo Rust
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache vcpkg
        uses: actions/cache@v3
        with:
          path: |
            ${{ env.VCPKG_DEFAULT_BINARY_CACHE }}
            ${{ env.XDG_CACHE_HOME }}/vcpkg/archives
            ~/.cache/vcpkg/archives
          key: ${{ runner.os }}-vcpkg-${{ steps.vcpkg_version.outputs.value }}
      - name: Install Rust tools
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}
          target: ${{ matrix.triplet }}
          profile: ${{ env.RUST_PROFILE }}
          override: true
      - run: cargo install cargo-vcpkg
      - run: cargo vcpkg -v build
      - run: cargo build --release